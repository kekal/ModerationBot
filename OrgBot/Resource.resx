<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Enable banning" xml:space="preserve">
    <value>Enable banning users when deleting spam</value>
  </data>
  <data name="Disable any restricting" xml:space="preserve">
    <value>Disable any restricting users when deleting spam</value>
  </data>
  <data name="Enable muting" xml:space="preserve">
    <value>Enable muting users (instead of banning)</value>
  </data>
  <data name="Set the spam time" xml:space="preserve">
    <value>Set the spam time window in seconds</value>
  </data>
  <data name="Set the restriction duration" xml:space="preserve">
    <value>Set the restriction duration in minutes or '0' for infinite</value>
  </data>
  <data name="Toggle silent" xml:space="preserve">
    <value>Toggle silent mode (no messages on spam actions)</value>
  </data>
  <data name="ShowHelp" xml:space="preserve">
    <value>Show available commands</value>
  </data>
  <data name="Show the last actions" xml:space="preserve">
    <value>Show the last {0} actions</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start processing updates</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Stop processing updates</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop the bot</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Unknown command.</value>
  </data>
  <data name="Bot is engaged" xml:space="preserve">
    <value>Bot is now engaged and processing updates.</value>
  </data>
  <data name="non-command error" xml:space="preserve">
    <value>Please use commands to interact with the bot. Use /help to see available commands.</value>
  </data>
  <data name="throttle_notify" xml:space="preserve">
    <value>User {0} will be throttled with {1} seconds pause.</value>
  </data>
  <data name="Silent mode" xml:space="preserve">
    <value>Silent mode is now {0}.</value>
  </data>
  <data name="not bot owner" xml:space="preserve">
    <value>You are not the bot owner.</value>
  </data>
  <data name="chat does not belong owner" xml:space="preserve">
    <value>This chat does not belong to bot owner.</value>
  </data>
  <data name="shutting down" xml:space="preserve">
    <value>Bot service has been stopped.</value>
  </data>
  <data name="users will be banned" xml:space="preserve">
    <value>Spamming users will be banned.</value>
  </data>
  <data name="not an Admin" xml:space="preserve">
    <value>Bot is not an Admin.</value>
  </data>
  <data name="Invalid restriction duration" xml:space="preserve">
    <value>Invalid restriction duration specified. Please provide '0' for infinite or a positive integer in minutes.</value>
  </data>
  <data name="Restriction duration" xml:space="preserve">
    <value>Restriction duration set to {0} minutes.</value>
  </data>
  <data name="Bot disengaged" xml:space="preserve">
    <value>Bot is now disengaged and will not process updates.</value>
  </data>
  <data name="users will be muted" xml:space="preserve">
    <value>Spamming users will be muted.</value>
  </data>
  <data name="Restarting" xml:space="preserve">
    <value>Restarting the service.</value>
  </data>
  <data name="users will not be restricted" xml:space="preserve">
    <value>Spamming users will not be restricted.</value>
  </data>
  <data name="Restriction forever" xml:space="preserve">
    <value>Restriction duration set to forever.</value>
  </data>
  <data name="API rate limit exceeded" xml:space="preserve">
    <value>API rate limit exceeded. Retrying after {0} seconds.</value>
  </data>
  <data name="Too many requests" xml:space="preserve">
    <value>Too many requests: {0} seconds to wait.</value>
  </data>
  <data name="throttled_user" xml:space="preserve">
    <value>Force the user to make a specified pause between messages.</value>
  </data>
  <data name="free_user" xml:space="preserve">
    <value>User will not be throttled.</value>
  </data>
  <data name="join_disable" xml:space="preserve">
    <value>Join/left messages will be {0}</value>
  </data>
  <data name="joining_description" xml:space="preserve">
    <value>Switch Join/Left messages</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value> Bot service has been started</value>
  </data>
  <data name="Clean_non_group_url_mode" xml:space="preserve">
	  <value>Cleaning messages from non-group members is now {0}.</value>
  </data>
  <data name="Clean_non_group_url" xml:space="preserve">
	  <value>Cleaning messages from non-group members.</value>
  </data>
</root>